// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: proto/log_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// LogLevel 枚举定义日志级别
type LogLevel int32

const (
	LogLevel_DEBUG LogLevel = 0
	LogLevel_INFO  LogLevel = 1
	LogLevel_WARN  LogLevel = 2
	LogLevel_ERROR LogLevel = 3
	LogLevel_FATAL LogLevel = 4
)

// Enum value maps for LogLevel.
var (
	LogLevel_name = map[int32]string{
		0: "DEBUG",
		1: "INFO",
		2: "WARN",
		3: "ERROR",
		4: "FATAL",
	}
	LogLevel_value = map[string]int32{
		"DEBUG": 0,
		"INFO":  1,
		"WARN":  2,
		"ERROR": 3,
		"FATAL": 4,
	}
)

func (x LogLevel) Enum() *LogLevel {
	p := new(LogLevel)
	*p = x
	return p
}

func (x LogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_log_service_proto_enumTypes[0].Descriptor()
}

func (LogLevel) Type() protoreflect.EnumType {
	return &file_proto_log_service_proto_enumTypes[0]
}

func (x LogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogLevel.Descriptor instead.
func (LogLevel) EnumDescriptor() ([]byte, []int) {
	return file_proto_log_service_proto_rawDescGZIP(), []int{0}
}

// LogEntry 日志条目
type LogEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ServiceName   string                 `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Level         LogLevel               `protobuf:"varint,3,opt,name=level,proto3,enum=logservice.LogLevel" json:"level,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     string                 `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	TraceId       string                 `protobuf:"bytes,7,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SpanId        string                 `protobuf:"bytes,8,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_proto_log_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_log_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_proto_log_service_proto_rawDescGZIP(), []int{0}
}

func (x *LogEntry) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LogEntry) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *LogEntry) GetLevel() LogLevel {
	if x != nil {
		return x.Level
	}
	return LogLevel_DEBUG
}

func (x *LogEntry) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LogEntry) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *LogEntry) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *LogEntry) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *LogEntry) GetSpanId() string {
	if x != nil {
		return x.SpanId
	}
	return ""
}

// WriteLogRequest 写入日志请求
type WriteLogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LogEntry      *LogEntry              `protobuf:"bytes,1,opt,name=log_entry,json=logEntry,proto3" json:"log_entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteLogRequest) Reset() {
	*x = WriteLogRequest{}
	mi := &file_proto_log_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteLogRequest) ProtoMessage() {}

func (x *WriteLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_log_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteLogRequest.ProtoReflect.Descriptor instead.
func (*WriteLogRequest) Descriptor() ([]byte, []int) {
	return file_proto_log_service_proto_rawDescGZIP(), []int{1}
}

func (x *WriteLogRequest) GetLogEntry() *LogEntry {
	if x != nil {
		return x.LogEntry
	}
	return nil
}

// WriteLogResponse 写入日志响应
type WriteLogResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	LogId         string                 `protobuf:"bytes,3,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteLogResponse) Reset() {
	*x = WriteLogResponse{}
	mi := &file_proto_log_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteLogResponse) ProtoMessage() {}

func (x *WriteLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_log_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteLogResponse.ProtoReflect.Descriptor instead.
func (*WriteLogResponse) Descriptor() ([]byte, []int) {
	return file_proto_log_service_proto_rawDescGZIP(), []int{2}
}

func (x *WriteLogResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *WriteLogResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *WriteLogResponse) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

// QueryLogRequest 查询日志请求
type QueryLogRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ServiceName     string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Level           LogLevel               `protobuf:"varint,2,opt,name=level,proto3,enum=logservice.LogLevel" json:"level,omitempty"`
	StartTime       string                 `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime         string                 `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	MetadataFilters map[string]string      `protobuf:"bytes,5,rep,name=metadata_filters,json=metadataFilters,proto3" json:"metadata_filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	TraceId         string                 `protobuf:"bytes,6,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	Limit           int32                  `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset          int32                  `protobuf:"varint,8,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *QueryLogRequest) Reset() {
	*x = QueryLogRequest{}
	mi := &file_proto_log_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryLogRequest) ProtoMessage() {}

func (x *QueryLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_log_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryLogRequest.ProtoReflect.Descriptor instead.
func (*QueryLogRequest) Descriptor() ([]byte, []int) {
	return file_proto_log_service_proto_rawDescGZIP(), []int{3}
}

func (x *QueryLogRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *QueryLogRequest) GetLevel() LogLevel {
	if x != nil {
		return x.Level
	}
	return LogLevel_DEBUG
}

func (x *QueryLogRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *QueryLogRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *QueryLogRequest) GetMetadataFilters() map[string]string {
	if x != nil {
		return x.MetadataFilters
	}
	return nil
}

func (x *QueryLogRequest) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *QueryLogRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *QueryLogRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// QueryLogResponse 查询日志响应
type QueryLogResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Logs          []*LogEntry            `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryLogResponse) Reset() {
	*x = QueryLogResponse{}
	mi := &file_proto_log_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryLogResponse) ProtoMessage() {}

func (x *QueryLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_log_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryLogResponse.ProtoReflect.Descriptor instead.
func (*QueryLogResponse) Descriptor() ([]byte, []int) {
	return file_proto_log_service_proto_rawDescGZIP(), []int{4}
}

func (x *QueryLogResponse) GetLogs() []*LogEntry {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *QueryLogResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *QueryLogResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *QueryLogResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// BatchWriteLogRequest 批量写入日志请求
type BatchWriteLogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LogEntries    []*LogEntry            `protobuf:"bytes,1,rep,name=log_entries,json=logEntries,proto3" json:"log_entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchWriteLogRequest) Reset() {
	*x = BatchWriteLogRequest{}
	mi := &file_proto_log_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchWriteLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchWriteLogRequest) ProtoMessage() {}

func (x *BatchWriteLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_log_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchWriteLogRequest.ProtoReflect.Descriptor instead.
func (*BatchWriteLogRequest) Descriptor() ([]byte, []int) {
	return file_proto_log_service_proto_rawDescGZIP(), []int{5}
}

func (x *BatchWriteLogRequest) GetLogEntries() []*LogEntry {
	if x != nil {
		return x.LogEntries
	}
	return nil
}

// BatchWriteLogResponse 批量写入日志响应
type BatchWriteLogResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	LogIds        []string               `protobuf:"bytes,3,rep,name=log_ids,json=logIds,proto3" json:"log_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchWriteLogResponse) Reset() {
	*x = BatchWriteLogResponse{}
	mi := &file_proto_log_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchWriteLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchWriteLogResponse) ProtoMessage() {}

func (x *BatchWriteLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_log_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchWriteLogResponse.ProtoReflect.Descriptor instead.
func (*BatchWriteLogResponse) Descriptor() ([]byte, []int) {
	return file_proto_log_service_proto_rawDescGZIP(), []int{6}
}

func (x *BatchWriteLogResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BatchWriteLogResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *BatchWriteLogResponse) GetLogIds() []string {
	if x != nil {
		return x.LogIds
	}
	return nil
}

var File_proto_log_service_proto protoreflect.FileDescriptor

const file_proto_log_service_proto_rawDesc = "" +
	"\n" +
	"\x17proto/log_service.proto\x12\n" +
	"logservice\"\xd2\x02\n" +
	"\bLogEntry\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12!\n" +
	"\fservice_name\x18\x02 \x01(\tR\vserviceName\x12*\n" +
	"\x05level\x18\x03 \x01(\x0e2\x14.logservice.LogLevelR\x05level\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\tR\ttimestamp\x12>\n" +
	"\bmetadata\x18\x06 \x03(\v2\".logservice.LogEntry.MetadataEntryR\bmetadata\x12\x19\n" +
	"\btrace_id\x18\a \x01(\tR\atraceId\x12\x17\n" +
	"\aspan_id\x18\b \x01(\tR\x06spanId\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"D\n" +
	"\x0fWriteLogRequest\x121\n" +
	"\tlog_entry\x18\x01 \x01(\v2\x14.logservice.LogEntryR\blogEntry\"h\n" +
	"\x10WriteLogResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12\x15\n" +
	"\x06log_id\x18\x03 \x01(\tR\x05logId\"\x84\x03\n" +
	"\x0fQueryLogRequest\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12*\n" +
	"\x05level\x18\x02 \x01(\x0e2\x14.logservice.LogLevelR\x05level\x12\x1d\n" +
	"\n" +
	"start_time\x18\x03 \x01(\tR\tstartTime\x12\x19\n" +
	"\bend_time\x18\x04 \x01(\tR\aendTime\x12[\n" +
	"\x10metadata_filters\x18\x05 \x03(\v20.logservice.QueryLogRequest.MetadataFiltersEntryR\x0fmetadataFilters\x12\x19\n" +
	"\btrace_id\x18\x06 \x01(\tR\atraceId\x12\x14\n" +
	"\x05limit\x18\a \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\b \x01(\x05R\x06offset\x1aB\n" +
	"\x14MetadataFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9c\x01\n" +
	"\x10QueryLogResponse\x12(\n" +
	"\x04logs\x18\x01 \x03(\v2\x14.logservice.LogEntryR\x04logs\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\"M\n" +
	"\x14BatchWriteLogRequest\x125\n" +
	"\vlog_entries\x18\x01 \x03(\v2\x14.logservice.LogEntryR\n" +
	"logEntries\"o\n" +
	"\x15BatchWriteLogResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12\x17\n" +
	"\alog_ids\x18\x03 \x03(\tR\x06logIds*?\n" +
	"\bLogLevel\x12\t\n" +
	"\x05DEBUG\x10\x00\x12\b\n" +
	"\x04INFO\x10\x01\x12\b\n" +
	"\x04WARN\x10\x02\x12\t\n" +
	"\x05ERROR\x10\x03\x12\t\n" +
	"\x05FATAL\x10\x042\xf0\x01\n" +
	"\n" +
	"LogService\x12E\n" +
	"\bWriteLog\x12\x1b.logservice.WriteLogRequest\x1a\x1c.logservice.WriteLogResponse\x12T\n" +
	"\rBatchWriteLog\x12 .logservice.BatchWriteLogRequest\x1a!.logservice.BatchWriteLogResponse\x12E\n" +
	"\bQueryLog\x12\x1b.logservice.QueryLogRequest\x1a\x1c.logservice.QueryLogResponseB\tZ\a./protob\x06proto3"

var (
	file_proto_log_service_proto_rawDescOnce sync.Once
	file_proto_log_service_proto_rawDescData []byte
)

func file_proto_log_service_proto_rawDescGZIP() []byte {
	file_proto_log_service_proto_rawDescOnce.Do(func() {
		file_proto_log_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_log_service_proto_rawDesc), len(file_proto_log_service_proto_rawDesc)))
	})
	return file_proto_log_service_proto_rawDescData
}

var file_proto_log_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_log_service_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_log_service_proto_goTypes = []any{
	(LogLevel)(0),                 // 0: logservice.LogLevel
	(*LogEntry)(nil),              // 1: logservice.LogEntry
	(*WriteLogRequest)(nil),       // 2: logservice.WriteLogRequest
	(*WriteLogResponse)(nil),      // 3: logservice.WriteLogResponse
	(*QueryLogRequest)(nil),       // 4: logservice.QueryLogRequest
	(*QueryLogResponse)(nil),      // 5: logservice.QueryLogResponse
	(*BatchWriteLogRequest)(nil),  // 6: logservice.BatchWriteLogRequest
	(*BatchWriteLogResponse)(nil), // 7: logservice.BatchWriteLogResponse
	nil,                           // 8: logservice.LogEntry.MetadataEntry
	nil,                           // 9: logservice.QueryLogRequest.MetadataFiltersEntry
}
var file_proto_log_service_proto_depIdxs = []int32{
	0,  // 0: logservice.LogEntry.level:type_name -> logservice.LogLevel
	8,  // 1: logservice.LogEntry.metadata:type_name -> logservice.LogEntry.MetadataEntry
	1,  // 2: logservice.WriteLogRequest.log_entry:type_name -> logservice.LogEntry
	0,  // 3: logservice.QueryLogRequest.level:type_name -> logservice.LogLevel
	9,  // 4: logservice.QueryLogRequest.metadata_filters:type_name -> logservice.QueryLogRequest.MetadataFiltersEntry
	1,  // 5: logservice.QueryLogResponse.logs:type_name -> logservice.LogEntry
	1,  // 6: logservice.BatchWriteLogRequest.log_entries:type_name -> logservice.LogEntry
	2,  // 7: logservice.LogService.WriteLog:input_type -> logservice.WriteLogRequest
	6,  // 8: logservice.LogService.BatchWriteLog:input_type -> logservice.BatchWriteLogRequest
	4,  // 9: logservice.LogService.QueryLog:input_type -> logservice.QueryLogRequest
	3,  // 10: logservice.LogService.WriteLog:output_type -> logservice.WriteLogResponse
	7,  // 11: logservice.LogService.BatchWriteLog:output_type -> logservice.BatchWriteLogResponse
	5,  // 12: logservice.LogService.QueryLog:output_type -> logservice.QueryLogResponse
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_log_service_proto_init() }
func file_proto_log_service_proto_init() {
	if File_proto_log_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_log_service_proto_rawDesc), len(file_proto_log_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_log_service_proto_goTypes,
		DependencyIndexes: file_proto_log_service_proto_depIdxs,
		EnumInfos:         file_proto_log_service_proto_enumTypes,
		MessageInfos:      file_proto_log_service_proto_msgTypes,
	}.Build()
	File_proto_log_service_proto = out.File
	file_proto_log_service_proto_goTypes = nil
	file_proto_log_service_proto_depIdxs = nil
}
